#!/bin/bash

# Databases
apis=( fbi i18n iam notification payment storage survey webapi )
# apis=( log )

env=$1
dump_dir=$2

function error { echo -e "\033[0;31m${1}\033[0m"; }

if [[ -z ${dump_dir} ]]; then
    error 'Dump destination directory must be provided as a second argument'
    exit 1
fi

function setup {
    user=${1}
    password=${2}
    port=${3}

    if [[ ! -d $dump_dir ]]; then
        mkdir -p $dump_dir
    fi

    if [[ ! -z ${4} ]]; then
        ${4} & # Open SSH tunnel
        ssh_tunnel_pid=$!
        echo "Connecting to ${env^^} database..."
        sleep 3
    fi
}

case $env in
    local)
        setup $FB_LOCAL_DB_USER $FB_LOCAL_DB_PASS '5432'
    ;;
    dev)
        setup $FB_DEV_DB_USER $FB_DEV_DB_PASS '5433' "$FB_DEV_SSH_TUNNEL"
    ;;
    qa)
        setup $FB_QA_DB_USER $FB_QA_DB_PASS '5433' "$FB_QA_SSH_TUNNEL"
    ;;
    uat)
        setup $FB_UAT_DB_USER $FB_UAT_DB_PASS '5433' "$FB_UAT_SSH_TUNNEL"
    ;;
    prod)
        setup $FB_PROD_DB_USER $FB_PROD_DB_PASS '5433' "$FB_PROD_SSH_TUNNEL"
    ;;
    *)
        error 'Environment must be one of "local", "dev", "qa", "uat" or "prod"'
        exit 1
    ;;
esac

for api in "${apis[@]}"
do
    echo "===================   Dumping api_${api} database   ==================="
    PGPASSWORD=${password} pg_dump -h localhost -p $port -U $user -Fc api_$api > ${dump_dir}/api_$api.dump
done

if [[ -n "$ssh_tunnel_pid" ]]; then
    kill $ssh_tunnel_pid
fi

echo -e "\033[0;32mDone.\033[0m"
